version: 2.1
orbs:
  aws-ecs: circleci/aws-ecs@0.0.8

jobs:
  build-and-push-image:
    machine:
      image: ubuntu-1604:201903-01
    steps:
    - checkout
    - run:
        name: Install AWS CLI
        command: |
          export PIP=$(which pip pip3 | head -1)
          if [[ -n $PIP ]]; then
            if which sudo > /dev/null; then
              sudo $PIP install awscli --upgrade
            else
              # This installs the AWS CLI to ~/.local/bin. Make sure that ~/.local/bin is in your $PATH.
              $PIP install awscli --upgrade --user
            fi
          elif [[ $(which unzip curl | wc -l) -eq 2 ]]; then
            cd
            curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
            unzip awscli-bundle.zip
            if which sudo > /dev/null; then
              sudo ~/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
            else
              # This installs the AWS CLI to the default location (~/.local/lib/aws) and create a symbolic link (symlink) at ~/bin/aws. Make sure that ~/bin is in your $PATH.
              awscli-bundle/install -b ~/bin/aws
            fi
            rm -rf awscli-bundle*
            cd -
          else
            echo "Unable to install AWS CLI. Please install pip."
            exit 1
          fi
    - run:
        name: Configure AWS Access Key ID
        command: |
          aws configure set aws_access_key_id \
          $AWS_ACCESS_KEY_ID \
          --profile default
    - run:
        name: Configure AWS Secret Access Key
        command: |
          aws configure set aws_secret_access_key \
          $AWS_SECRET_ACCESS_KEY \
          --profile default
    - run:
        name: Configure AWS default region
        command: |
          aws configure set region $AWS_DEFAULT_REGION \
          --profile default
    - run:
        command: |
          # aws ecr get-login returns a login command w/ a temp token
          LOGIN_COMMAND=$(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

          # save it to an env var & use that env var to login
          $LOGIN_COMMAND
        name: Log into Amazon ECR
    - run:
        command: |
          docker build \
            -f Dockerfile \
            -t $AWS_ECR_ACCOUNT_URL/tvw/tvw_frontend:${CIRCLE_SHA1} \
            .
        name: Build docker image
        no_output_timeout: 10m
    - run:
        command: docker push $AWS_ECR_ACCOUNT_URL/tvw/tvw_frontend:${CIRCLE_SHA1}
        name: Push image to Amazon ECR
workflows:
  build-and-deploy:
    jobs:
    - build-and-push-image:
        filters:
          branches:
            only:
              - master
    - aws-ecs/deploy-service-update:
        requires:
          - build-and-push-image
        aws-region: ${AWS_DEFAULT_REGION}
        family: "tvw_frontend"
        cluster-name: "TVW"
        container-image-name-updates: "container=tvw_frontend,image-and-tag=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/tvw/tvw_frontend:${CIRCLE_SHA1}"
